protocol buffer 读书笔记
网址：http://blog.csdn.net/carson_ho/article/details/70037693

前言：

习惯用 Json、XML 数据存储格式的，相信大多都没听过Protocol Buffer
Protocol Buffer 是 Google出品的一种轻量 & 高效的结构化数据存储格式，性能比 Json、XML强太多！ 

目录：


		    1.定义

	            2.作用

      		           优点
                    3.特点
			   缺点

Protocol Buffer     4.应用场景

		    
					     使用步骤
				5.1 环境配置
					     详细介绍		    

		    5.使用流程  5.2 构建Protocol Buffer对象模型

				5.3 具体应用到平台

		    6.总结


一 . 定义
Protocol Buffer是一种 结构化数据 的数据存储格式（类似于 `XML、Json` ）
a.Google 出品 （开源）
b.Protocol Buffer 目前有两个版本：proto2 和 proto3(目前还是 beta 版)

二 . 作用
通过将 结构化的数据 进行 串行化（**序列化**），从而实现 **数据存储 / RPC 数据交换**的功能
a.序列化： 将 数据结构或对象 转换成 二进制串 的过程
b.反序列化：将在序列化过程中所生成的二进制串 转换成 数据结构或者对象 的过程

三 . 特点
对比于 常见的 XML、Json 数据存储格式，Protocol Buffer有如下特点：
优点：性能方面：体积小；序列化速度快；传输速度快；
      使用方法：使用简单；维护成本低；向后兼容性好；加密性好；
      使用范围：跨平台；跨语言；可拓展性好；

缺点：功能方面：不适合用于对基于文本的标记文档（如HTML）建模，因为文本不适合描述数据结构
      其他方面：通用性较差
		自解释性差

总结：Protocol Buffer比XML，json更小、更快、使用&维护更简单！

四 . 应用场景
传输数据量大 & 网络环境不稳定 的数据存储、RPC 数据交换 的需求场景。如即时IM（QQ、微信）的需求场景。
在传输数据量较大的需求场景下，Protocol Buffer比XML、Json 更小、更快、使用 & 维护更简单！

五 . 使用流程
步骤1：环境配置

步骤2：构建Protocol Buffer的消息对象模型

步骤3：应用到具体平台





























